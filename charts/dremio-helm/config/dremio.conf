#
# Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.
#

{{- if not (or (eq $.Values.distStorage.type "gcp") (eq $.Values.distStorage.type "aws") (eq $.Values.distStorage.type "azureStorage")) }}
{{- fail "\n\n** ERROR: Unsupported distStorage type. Valid types are: gcp, aws, azureStorage **\n" }}
{{- end }}

paths: {
  # Local path for dremio to store data.
  local: ${DREMIO_HOME}"/data"
  # Distributed path Dremio data including job results, downloads,
  # uploads, etc
  results: "pdfs://"${paths.local}"/results"
  {{- if eq $.Values.distStorage.type "aws" }}
  dist: "dremioS3:///{{ required "AWS bucket name required" $.Values.distStorage.aws.bucketName }}{{ required "AWS bucket path required" $.Values.distStorage.aws.path }}"
  {{- else if eq $.Values.distStorage.type "azureStorage" }}
  dist: "dremioAzureStorage://:///{{ required "Azure Storage filesystem required" $.Values.distStorage.azureStorage.filesystem }}{{ required "Azure Storage path required" $.Values.distStorage.azureStorage.path }}"
  {{- else if eq $.Values.distStorage.type "gcp" }}
  dist: "dremiogcs:///{{ required "GCS bucket name required" $.Values.distStorage.gcp.bucketName }}{{ required "GCS bucket path required" $.Values.distStorage.gcp.path }}"
  {{- else -}}
  {{ fail "Unrecognized distStorage type." }}
  {{- end }}
}

services: {
  # The services running are controlled via command line options passed in
  # while starting the services via kubernetes. Updating the values listed below will not
  # impact what is running:
  # - coordinator.enabled
  # - coordinator.master.enabled
  # - coordinator.master.embedded-zookeeper.enabled
  # - executor.enabled
  #
  # Other service parameters can be customized via this file.

  # Enable prometheus metrics for dremio if phone home is enabled
  web-admin: {
    enabled: true
    host: "0.0.0.0"
    port: 9010
  }

  {{- if and $.Values.executor.cloudCache.enabled (eq $.Values.executor.cloudCache.enabled true) }}
  executor: {
    cache: {
      path.db: "/opt/dremio/cloudcache/c0"
      pctquota.db: 100

      path.fs: ["/opt/dremio/cloudcache/c0"]
      pctquota.fs: [100]
      ensurefreespace.fs: [0]
      {{ range $index, $_ := rest $.Values.executor.cloudCache.volumes -}}
      path.fs += "/opt/dremio/cloudcache/c{{ add1 $index }}"
      pctquota.fs += 100
      ensurefreespace.fs += 0
      {{- end }}
    }
  }
  {{- end }}
}

{{- if and $.Values.executor.cloudCache.enabled (ne $.Values.distStorage.type "local") }}
debug: {
  # Enable caching for distributed storage, it is turned off by default
  dist.caching.enabled: true,
  # Max percent of total available cache space to use when possible for distributed storage
  dist.max.cache.space.percent: 100
}
{{- end }}

{{- if $.Values.coordinator.web.auth.enabled }}
services.coordinator.web.auth.type: {{ $.Values.coordinator.web.auth.type | quote }}
{{- end }}
{{- if (((($.Values.coordinator).web).auth).ssoFile) }}
services.coordinator.web.auth.config:  ${DREMIO_HOME}"/conf/sso.json"
{{- end }}

{{- if $.Values.coordinator.web.tls.enabled }}
services.coordinator.web.ssl.enabled: true
services.coordinator.web.ssl.auto-certificate.enabled: false
services.coordinator.web.ssl.keyStore: "/opt/dremio/tls/ui.pkcs12"
{{- end }}

{{- if $.Values.coordinator.client.tls.enabled }}
# Client endpoint (i.e. ODBC/JDBC) encryption is only supported in Dremio Enterprise Edition.
services.coordinator.client-endpoint.ssl.enabled: true
services.coordinator.client-endpoint.ssl.auto-certificate.enabled: false
services.coordinator.client-endpoint.ssl.keyStore: "/opt/dremio/tls/client.pkcs12"
{{- end }}

{{- if $.Values.coordinator.flight.tls.enabled }}
services.flight.ssl.enabled: true
services.flight.ssl.auto-certificate.enabled: false
services.flight.ssl.keyStore: "/opt/dremio/tls/flight.pkcs12"
{{- end }}

{{ if (($.Values.dremio.advancedConfigs).trustStore).enabled }}
javax.net.ssl {
  trustStore: "/opt/dremio/conf/truststore"
  trustStorePassword: {{ (($.Values.dremio.advancedConfigs).trustStore).password | quote }}
}
{{- end }}

{{- /* Add extra configuration options from dremioConfExtraOptions */ -}}
{{- range $key, $value := $.Values.dremio.dremioConfExtraOptions }}
{{ $key }}: {{ $value }}
{{- end }}


