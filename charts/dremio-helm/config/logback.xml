<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.

-->
<configuration scan="true" scanPeriod="30 seconds">
  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
  <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- The following appenders are only available if dremio.log.path is defined -->
  <if condition='isDefined("dremio.log.path")'>
    <then>
      <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/server.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/server.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>

      <appender name="metadata_refresh" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/metadata_refresh.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/metadata_refresh.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>

      <appender name="json" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/json/server.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/json/archive/server.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <pattern><pattern>{"timestamp": "%date{ISO8601}", "host":"${HOSTNAME}" }</pattern></pattern>
            <threadName><fieldName>thread</fieldName></threadName>
            <logLevel><fieldName>levelName</fieldName></logLevel>
            <logLevelValue><fieldName>levelValue</fieldName></logLevelValue>
            <loggerName><fieldName>logger</fieldName></loggerName>
            <message><fieldName>message</fieldName></message>
            <arguments />
            <stackTrace />
          </providers>
        </encoder>
      </appender>

      <appender name="query" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/queries.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/queries.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <arguments />
          </providers>
        </encoder>
      </appender>

      <appender name="search" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/search.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/search.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <arguments />
          </providers>
        </encoder>
      </appender>

      <appender name="audit" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/audit.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/audit.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <pattern><pattern>{"timestamp": "%date{ISO8601}"}</pattern></pattern>
            <arguments />
          </providers>
        </encoder>
      </appender>

      <appender name="tracker" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/tracker.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/tracker.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
              <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>

      <appender name="vacuum" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dremio.log.path}/vacuum.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${dremio.log.path}/archive/vacuum.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
          <maxHistory>30</maxHistory>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <pattern><pattern>{"timestamp": "%date{ISO8601}"}</pattern></pattern>
            <arguments />
          </providers>
        </encoder>
      </appender>

    </then>
  </if>

  <logger name="com.dremio">
    <level value="${dremio.log.level:-info}"/>
  </logger>

  <logger name="query.logger">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="query"/>
      </then>
    </if>
  </logger>

  <logger name="search.logger" additivity="false">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="search"/>
      </then>
    </if>
  </logger>

  <logger name="audit.logger">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="audit"/>
      </then>
    </if>
  </logger>

  <logger name="tracker.logger">
      <level value="{dremio.log.level: -info}"/>
      <if condition='isDefined("dremio.log.path")'>
          <then>
              <additivity value ="false"/>
              <appender-ref ref="tracker"/>
          </then>
      </if>
  </logger>

  <logger name="com.dremio.exec.catalog.SourceMetadataManager" additivity="false">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="metadata_refresh"/>
      </then>
    </if>
  </logger>

  <logger name="com.dremio.exec.store.hive.HiveClient" additivity="false">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="metadata_refresh"/>
      </then>
    </if>
  </logger>

  <logger name="VacuumLogger" additivity="false">
    <level value="${dremio.log.level:-info}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="vacuum"/>
      </then>
    </if>
  </logger>

  <logger name="hive.deprecated.function.warning.logger" level="warn">
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <additivity value ="false"/>
        <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
          <file>${dremio.log.path}/hive.deprecated.function.warning.log</file>
          <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${dremio.log.path}/archive/hive.deprecated.function.warning.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
              <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
          </rollingPolicy>

          <encoder>
            <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
          </encoder>
        </appender>
      </then>
    </if>
  </logger>

  <logger name="org.apache.hadoop.hdfs.DFSClient">
    <level value="warn"/>
  </logger>

  <root>
    <level value="${dremio.log.root.level:-error}"/>
    <if condition='isDefined("dremio.log.path")'>
      <then>
        <appender-ref ref="text"/>
        <appender-ref ref="json"/>
        <appender-ref ref="console"/>
      </then>
      <else>
        <appender-ref ref="console"/>
      </else>
    </if>
  </root>

</configuration>
