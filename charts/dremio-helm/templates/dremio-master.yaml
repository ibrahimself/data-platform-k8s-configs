#
# Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.
#

{{- if not $.Values.DremioAdmin }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-master
  {{- include "dremio.coordinator.annotations" $ | nindent 2}}
  {{- include "dremio.coordinator.labels" $ | nindent 2}}
spec:
  serviceName: "dremio-cluster-pod"
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      app: dremio-coordinator
  template:
    metadata:
      labels:
        app: dremio-coordinator
        role: dremio-cluster-pod
        app-group: dremio
        external-client-access: "true"
        diagnostics-collector-role: dremio-coordinator
        {{- include "dremio.coordinator.podLabels" $ | nindent 8}}
      annotations:
        dremio-configmap/checksum: {{ include (print $.Template.BasePath "/dremio-configmap.yaml") . | sha256sum }}
        metrics.dremio.com/scrape: "true"
        metrics.dremio.com/port: "9010"
        metrics.dremio.com/path: "/metrics"
        {{- include "dremio.coordinator.podAnnotations" $ | nindent 8}}
    spec:
      serviceAccountName: {{ .Values.coordinator.serviceAccount }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - dremio-coordinator
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 120
      {{- include "dremio.coordinator.nodeSelector" $ | nindent 6 }}
      {{- include "dremio.coordinator.tolerations" $ | nindent 6 }}
      {{- include "dremio.podSecurityContext" $ | nindent 6 }}
      containers:
      - name: dremio-master-coordinator
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        image: {{ $.Values.dremio.image.repository }}:{{ $.Values.dremio.image.tag }}
        imagePullPolicy: {{ $.Values.dremio.image.pullPolicy }}
        resources:
          {{- .Values.coordinator.resources | toYaml | nindent 10 }}
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        {{- include "dremio.coordinator.engine.volume.mounts" $ | nindent 8 }}
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2.d
        - name: dremio-license
          mountPath: /opt/dremio/license
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2-ee.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3-ee.d
        {{- if or $.Values.coordinator.web.tls.enabled (or $.Values.coordinator.client.tls.enabled $.Values.coordinator.flight.tls.enabled) }}
        - name: dremio-tls
          mountPath: /opt/dremio/tls
        {{- end }}
        {{- if $.Values.opensearch.enabled }}
        - name: dremio-opensearch
          mountPath: /opt/dremio/opensearch
        - name: {{ .Values.opensearch.tlsCertsSecretName }}
          mountPath: /opt/dremio/opensearch/tls
        {{- end }}
        {{- include "dremio.coordinator.extraVolumeMounts" $ | nindent 8 }}
        {{- include "dremio.coordinator.log.volumeMount" $ | nindent 8 }}
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "{{ include "dremio.coordinator.heapMemory" $ }}"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "{{ include "dremio.coordinator.directMemory" $ }}"
        - name: DREMIO_JAVA_SERVER_EXTRA_OPTS
          value: >-
            {{- include "dremio.coordinator.extraStartParams" $ | nindent 12 -}}
            {{- include "dremio.coordinator.search.enabled" $ | nindent 12 -}}
            {{- include "dremio.catalog.java.options" $ | nindent 12 }}
            {{- include "dremio.catalogservices.java.options" $ | nindent 12 }}
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.enabled=true
            -Dservices.coordinator.master.enabled=true
            -Dservices.coordinator.master.embedded-zookeeper.enabled=false
            -Dservices.executor.enabled=false
            -Dservices.conduit.port=45679
            -Dservices.coordinator.auto-upgrade={{ ne .Values.coordinator.autoUpgrade false }}
            -Dservices.nats.service-name={{ include "dremio.nats.serviceName" .}}
            -Dservices.nats.service-port={{ include "dremio.nats.servicePort" .}}
            -XX:ActiveProcessorCount={{- include "dremio.coordinator.activeProcessorCount" $ }}
        - name: AWS_CREDENTIAL_PROFILES_FILE
          value: "/opt/dremio/aws/credentials"
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: "/opt/dremio/aws/credentials"
        {{- include "dremio.coordinator.engine.envs" $ | nindent 8 }}
        {{- include "dremio.coordinator.log.path" $ | nindent 8 }}
        {{- include "dremio.coordinator.extraEnvs" $ | nindent 8 }}
        - name: DREMIO_HELM_VERSION
          value: "{{ .Chart.Version }}"
        command: ["/opt/dremio/bin/dremio"]
        args:
        - "start-fg"
        ports:
        - containerPort: 9047
          name: web
        {{- if (le (int $.Values.coordinator.count) 0) }}
        - containerPort: 31010
          name: client
        - containerPort: 32010
          name: flight
        {{- end }}
        - containerPort: 45678
          name: server-fabric
        - containerPort: 45679
          name: server-conduit
        - containerPort: 9010
          name: metrics
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - |
                [ -f "/opt/dremio/data/db/.upgrading" ] || curl -k {{ $.Values.coordinator.web.tls.enabled | ternary "https" "http" }}://localhost:9047
          failureThreshold: {{ $.Values.coordinator.startupProbe.failureThreshold }}
          periodSeconds: {{ $.Values.coordinator.startupProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /
            {{- if $.Values.coordinator.web.tls.enabled }}
            scheme: HTTPS
            {{- end }}
            port: web
          failureThreshold: {{ $.Values.coordinator.readinessProbe.failureThreshold }}
          periodSeconds: {{ $.Values.coordinator.readinessProbe.periodSeconds }}
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                [ -f "/opt/dremio/data/db/.upgrading" ] || curl -k {{ $.Values.coordinator.web.tls.enabled | ternary "https" "http" }}://localhost:9047
          failureThreshold: {{ $.Values.coordinator.livenessProbe.failureThreshold }}
          periodSeconds: {{ $.Values.coordinator.livenessProbe.periodSeconds }}
      initContainers:
      {{- include "dremio.coordinator.extraInitContainers" $ | nindent 6 }}
      - name: start-only-one-dremio-master
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        image: {{ $.Values.busyBox.image.repository }}:{{ $.Values.busyBox.image.tag }}
        imagePullPolicy: {{ $.Values.busyBox.image.pullPolicy }}
        command: ["sh",
                  "-c",
                  "INDEX=${HOSTNAME##*-}; if [ $INDEX -ne 0 ]; then echo Only one master should be running.; exit 1; fi; "]
      - name: wait-for-zookeeper-and-nats
        image: {{ $.Values.busyBox.image.repository }}:{{ $.Values.busyBox.image.tag }}
        imagePullPolicy: {{ $.Values.busyBox.image.pullPolicy }}
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        command:  ["sh", "-c"]
        args:
          - |
            until nc zk-hs 2181 -w1 > /dev/null
            do
              echo Waiting for Zookeeper to be ready
              sleep 2
            done
            {{- if $.Values.nats.enabled }}
            until nc {{ include "dremio.nats.serviceName" . }} {{ include "dremio.nats.servicePort" . }} -w1 > /dev/null
            do
              echo Waiting for NATS to be ready
              sleep 2
            done
            {{- end }}
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      {{- if $.Values.opensearch.enabled }}
      - name: opensearch-init
        image: {{ $.Values.opensearch.image.repository }}:{{ $.Values.opensearch.image.tag }}
        imagePullPolicy: {{ $.Values.opensearch.image.pullPolicy }}
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        volumeMounts:
        - name: dremio-opensearch
          mountPath: /opt/dremio/opensearch
        workingDir: "/"
        command:  ["sh", "-c"]
        args:
          - |
            #!/usr/bin/env bash
            # Copy model configs, preserve directory structure.
            set -e

            DESTINATION_DIR=/opt/dremio/opensearch/models
            mkdir -p $DESTINATION_DIR
            cd /usr/share/opensearch/custom_models
            find . -name "*.json" -exec cp --parents {} $DESTINATION_DIR \;

            # Wait for the opensearch service.
            SVC_NAME={{ .Values.opensearch.serviceName }}.{{ .Release.Namespace }}.svc.cluster.local
            PORT=9200
            until nc $SVC_NAME $PORT -w1 > /dev/null
            do
              echo "Waiting for OpenSearch service to be ready at $SVC_NAME:$PORT"
              sleep 2
            done
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      {{- end }}
      {{- if $.Values.coordinator.web.tls.enabled }}
      - name: generate-ui-keystore
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        image: {{ $.Values.dremio.image.repository }}:{{ $.Values.dremio.image.tag }}
        imagePullPolicy: {{ $.Values.dremio.image.pullPolicy }}
        volumeMounts:
        - name: dremio-tls
          mountPath: /opt/dremio/tls
        - name: dremio-tls-secret-ui
          mountPath: /dremio-tls-secret
        command: ["/usr/bin/openssl"]
        args: ["pkcs12",
               "-export",
               "-inkey",
               "/dremio-tls-secret/tls.key",
               "-in",
               "/dremio-tls-secret/tls.crt",
               "-out",
               "/opt/dremio/tls/ui.pkcs12",
               "-passout",
               "pass:"]
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      {{- end }}
      {{- if $.Values.coordinator.client.tls.enabled }}
      - name: generate-client-keystore
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        image: {{ $.Values.dremio.image.repository }}:{{ $.Values.dremio.image.tag }}
        imagePullPolicy: {{ $.Values.dremio.image.pullPolicy }}
        volumeMounts:
        - name: dremio-tls
          mountPath: /opt/dremio/tls
        - name: dremio-tls-secret-client
          mountPath: /dremio-tls-secret
        command: ["/usr/bin/openssl"]
        args: ["pkcs12",
               "-export",
               "-inkey",
               "/dremio-tls-secret/tls.key",
               "-in",
               "/dremio-tls-secret/tls.crt",
               "-out",
               "/opt/dremio/tls/client.pkcs12",
               "-passout",
               "pass:"]
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      {{- end }}
      {{- if $.Values.coordinator.flight.tls.enabled }}
      - name: generate-flight-keystore
        {{- include "dremio.containerSecurityContext" $ | nindent 8 }}
        image: {{ $.Values.dremio.image.repository }}:{{ $.Values.dremio.image.tag }}
        imagePullPolicy: {{ $.Values.dremio.image.pullPolicy }}
        volumeMounts:
        - name: dremio-tls
          mountPath: /opt/dremio/tls
        - name: dremio-tls-secret-flight
          mountPath: /dremio-tls-secret
        command: ["/usr/bin/openssl"]
        args: ["pkcs12",
               "-export",
               "-inkey",
               "/dremio-tls-secret/tls.key",
               "-in",
               "/dremio-tls-secret/tls.crt",
               "-out",
               "/opt/dremio/tls/flight.pkcs12",
               "-passout",
               "pass:"]
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      {{- end }}
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      {{- include "dremio.coordinator.engine.volumes" $ | nindent 6 }}
      - name: dremio-hive2-config
        configMap:
          name: dremio-hive2-config
      - name: dremio-hive3-config
        configMap:
          name: dremio-hive3-config
      {{- if or $.Values.coordinator.web.tls.enabled (or $.Values.coordinator.client.tls.enabled $.Values.coordinator.flight.tls.enabled) }}
      - name: dremio-tls
        emptyDir: {}
      {{- end }}
      {{- if $.Values.coordinator.web.tls.enabled }}
      - name: dremio-tls-secret-ui
        secret:
          secretName: {{ $.Values.coordinator.web.tls.secret }}
          items:
          - key: tls.key
            path: tls.key
          - key: tls.crt
            path: tls.crt
      {{- end }}
      - name: dremio-license
        secret:
          secretName: dremio-license
          items:
            - key: license
              path: key
      {{- if $.Values.coordinator.client.tls.enabled }}
      - name: dremio-tls-secret-client
        secret:
          secretName: {{ $.Values.coordinator.client.tls.secret }}
          items:
          - key: tls.key
            path: tls.key
          - key: tls.crt
            path: tls.crt
      {{- end }}
      {{- if $.Values.coordinator.flight.tls.enabled }}
      - name: dremio-tls-secret-flight
        secret:
          secretName: {{ $.Values.coordinator.flight.tls.secret }}
          items:
          - key: tls.key
            path: tls.key
          - key: tls.crt
            path: tls.crt
      {{- end }}
      {{- if $.Values.opensearch.enabled }}
      - name: {{ .Values.opensearch.tlsCertsSecretName }}
        secret:
          secretName: {{ .Values.opensearch.tlsCertsSecretName }}
          items:
          - key: tls.crt
            path: tls.crt
      - name: dremio-opensearch
        emptyDir: {}
      {{- end }}
      {{- include "dremio.coordinator.extraVolumes" $ | nindent 6 }}
  volumeClaimTemplates:
  {{- include "dremio.coordinator.log.volumeClaimTemplate" $ | nindent 2 }}
  - metadata:
      name: dremio-master-volume
    spec:
      accessModes: ["ReadWriteOnce"]
      {{- include "dremio.coordinator.storageClass" $ | nindent 6 }}
      resources:
        requests:
          storage: {{ $.Values.coordinator.volumeSize }}
{{- end -}}
