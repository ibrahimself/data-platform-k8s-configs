#
# Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.
#

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

  bearertokenauth:
    filename: "/var/opt/dremio/license"

receivers:
  k8s_cluster:
    allocatable_types_to_report: [cpu, memory]
    collection_interval: {{ $.Values.telemetry.metrics.scrapeInterval.cluster }}
    namespace: ${env:NAMESPACE_ID}
    
    metrics:
      k8s.container.cpu_request:
        enabled: true
      k8s.container.cpu_limit:
        enabled: false
      k8s.container.memory_request:
        enabled: true
      k8s.container.memory_limit:
        enabled: false
      k8s.container.storage_request:
        enabled: true
      k8s.container.storage_limit:
        enabled: false
      k8s.container.ephemeralstorage_request:
        enabled: false
      k8s.container.ephemeralstorage_limit:
        enabled: false
      k8s.container.restarts:
        enabled: true
      k8s.container.ready:
        enabled: true
      k8s.pod.phase:
        enabled: false
      k8s.pod.status_reason:
        enabled: false
      k8s.deployment.desired:
        enabled: false
      k8s.deployment.available:
        enabled: false
      k8s.cronjob.active_jobs:
        enabled: false
      k8s.daemonset.current_scheduled_nodes:
        enabled: false
      k8s.daemonset.desired_scheduled_nodes:
        enabled: false
      k8s.daemonset.misscheduled_nodes:
        enabled: false
      k8s.daemonset.ready_nodes:
        enabled: false
      k8s.hpa.max_replicas:
        enabled: false
      k8s.hpa.min_replicas:
        enabled: false
      k8s.hpa.current_replicas:
        enabled: true
      k8s.hpa.desired_replicas:
        enabled: true
      k8s.job.active_pods:
        enabled: false
      k8s.job.desired_successful_pods:
        enabled: false
      k8s.job.failed_pods:
        enabled: false
      k8s.job.max_parallel_pods:
        enabled: false
      k8s.job.successful_pods:
        enabled: false
      k8s.namespace.phase:
        enabled: false
      k8s.replicaset.desired:
        enabled: false
      k8s.replicaset.available:
        enabled: false
      k8s.replication_controller.desired:
        enabled: false
      k8s.replication_controller.available:
        enabled: false
      k8s.resource_quota.hard_limit:
        enabled: false
      k8s.resource_quota.used:
        enabled: false
      k8s.statefulset.desired_pods:
        enabled: true
      k8s.statefulset.ready_pods:
        enabled: false
      k8s.statefulset.current_pods:
        enabled: true
      k8s.statefulset.updated_pods:
        enabled: false
      openshift.clusterquota.limit:
        enabled: false
      openshift.clusterquota.used:
        enabled: false
      openshift.appliedclusterquota.limit:
        enabled: false
      openshift.appliedclusterquota.used:
        enabled: false
      k8s.node.condition:
        enabled: false

    resource_attributes:
      k8s.namespace.uid:
        enabled: false
      k8s.namespace.name:
        enabled: true
      k8s.node.uid:
        enabled: false
      k8s.node.name:
        enabled: true
      container.id:
        enabled: false
      container.image.name:
        enabled: false
      container.image.tag:
        enabled: false
      k8s.container.name:
        enabled: true
      k8s.pod.name:
        enabled: true
      k8s.pod.uid:
        enabled: true
      k8s.pod.qos_class:
        enabled: false
      k8s.replicaset.name:
        enabled: true
      k8s.replicaset.uid:
        enabled: false
      k8s.replicationcontroller.name:
        enabled: false
      k8s.replicationcontroller.uid:
        enabled: false
      k8s.resourcequota.uid:
        enabled: false
      k8s.resourcequota.name:
        enabled: false
      k8s.statefulset.uid:
        enabled: false
      k8s.statefulset.name:
        enabled: true
      k8s.deployment.uid:
        enabled: false
      k8s.deployment.name:
        enabled: false
      k8s.cronjob.uid:
        enabled: false
      k8s.cronjob.name:
        enabled: false
      k8s.daemonset.name:
        enabled: false
      k8s.daemonset.uid:
        enabled: false
      k8s.hpa.uid:
        enabled: false
      k8s.hpa.name:
        enabled: false
      k8s.job.name:
        enabled: false
      k8s.job.uid:
        enabled: false
      k8s.kubelet.version:
        enabled: false
      container.runtime:
        enabled: false
      container.runtime.version:
        enabled: false
      os.description:
        enabled: false
      os.type:
        enabled: false
      openshift.clusterquota.uid:
        enabled: false
      openshift.clusterquota.name:
        enabled: false
      k8s.container.status.last_terminated_reason:
        enabled: false

  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

  prometheus:
    config:
      scrape_configs:
        - job_name: kubernetes
          scrape_interval: {{ $.Values.telemetry.metrics.scrapeInterval.app }}
          body_size_limit: {{ $.Values.telemetry.bodySizeLimit }}
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - ${env:NAMESPACE_ID}
              selectors:
                - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_container_init]
              regex: "true"
              action: drop
            - source_labels: [__meta_kubernetes_pod_annotation_metrics_dremio_com_scrape]
              regex: "true"
              action: keep
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_metrics_dremio_com_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_pod_annotation_metrics_dremio_com_path]
              action: replace
              target_label: __metrics_path__

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80

  batch:
    send_batch_max_size: {{ $.Values.telemetry.sendBatchMaxSize }}

exporters:
  otlp:
    endpoint: {{ $.Values.telemetry.endpoint }}
    compression: snappy
    {{- if $.Values.telemetry.insecure }}
    tls:
      insecure: true
    {{- else }}
    auth:
      authenticator: bearertokenauth
    {{- end }}
    headers:
      X-Dremio-ClusterID: ${env:DREMIO_CLUSTER_ID}

service:
  pipelines:
    metrics:
      receivers: [prometheus,k8s_cluster]
      processors: [memory_limiter,batch]
      exporters: [otlp]

  telemetry:
    metrics:
      level: detailed
      readers:
        - pull:
            exporter:
              prometheus:
                host: '0.0.0.0'
                port: 8888
    logs:
      level: info
      encoding: json
      output_paths:	["stdout"]
      error_output_paths: ["stderr"]

  extensions: [health_check,bearertokenauth]
