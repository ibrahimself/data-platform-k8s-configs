# Apache Airflow configuration - Working version

# Use KubernetesExecutor
executor: "KubernetesExecutor"

# Airflow image
images:
  airflow:
    repository: apache/airflow
    tag: "2.10.5"
    pullPolicy: IfNotPresent

# Environment variables
env:
  - name: AIRFLOW__CORE__LOAD_EXAMPLES
    value: "False"
  - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
    value: "True"
  - name: AIRFLOW__CORE__EXECUTOR
    value: "KubernetesExecutor"
  - name: AIRFLOW__KUBERNETES__NAMESPACE
    value: "airflow"
  - name: AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME
    value: "airflow-worker"

# Disable internal PostgreSQL
postgresql:
  enabled: false

# External database configuration
data:
  metadataSecretName: airflow-metadata-secret
  resultBackendSecretName: airflow-result-backend-secret

# Webserver configuration
webserver:
  replicas: 1
  defaultUser:
    enabled: true
    role: Admin
    username: admin
    email: admin@example.com
    firstName: Admin
    lastName: User
    password: admin

# Scheduler configuration
scheduler:
  replicas: 1

# Disable Triggerer temporarily to simplify deployment
triggerer:
  enabled: false

# Disable components not needed for KubernetesExecutor
redis:
  enabled: false
flower:
  enabled: false

# DAGs persistence
dags:
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
    accessMode: ReadWriteOnce
    existingClaim: airflow-dags

# Disable logs persistence (use stdout/stderr)
logs:
  persistence:
    enabled: false

# Fernet key
fernetKeySecretName: airflow-fernet-key

# Service account
serviceAccount:
  create: true
  name: airflow

# Workers service account
workers:
  serviceAccount:
    create: true
    name: airflow-worker

# RBAC
rbac:
  create: true

# Security contexts
securityContext:
  runAsUser: 50000
  runAsGroup: 0
  fsGroup: 0

# StatsD for metrics
statsd:
  enabled: true

# Cleanup
cleanup:
  enabled: true
  schedule: "0 0 * * *"

# Disable ingress (we manage it separately)
ingress:
  enabled: false

# Migration job settings - with timeout
migrateDatabaseJob:
  enabled: true
  useHelmHooks: false
  jobAnnotations:
    "argocd.argoproj.io/hook": Sync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

# Create user job settings - with timeout  
createUserJob:
  useHelmHooks: false
  jobAnnotations:
    "argocd.argoproj.io/hook": Sync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"