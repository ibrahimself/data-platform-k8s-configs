# monitoring-values.yaml - COMPLETE FIXED VERSION
# Fixes: storage class, alertmanager URL, and webhook configuration

# Global settings
global:
  evaluation_interval: 30s
  scrape_interval: 30s

# Prometheus Operator
prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: false
    patch:
      enabled: true
      image:
        repository: registry.k8s.io/ingress-nginx/kube-webhook-certgen
        tag: v20240813
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
        limits:
          cpu: 100m
          memory: 100Mi
  tls:
    enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Prometheus - with fixed storage class
prometheus:
  enabled: true
  prometheusSpec:
    replicas: 1
    # Use http scheme for external URL
    externalUrl: http://localhost/prometheus
    routePrefix: /prometheus
    retention: 7d
    
    # Enable cross-namespace monitoring
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    
    ruleSelectorNilUsesHelmValues: false
    ruleSelector: {}
    ruleNamespaceSelector: {}
    
    resources:
      requests:
        cpu: 500m       
        memory: 1Gi   
      limits:
        cpu: 1000m
        memory: 2Gi
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2  # FIXED: Changed from gp3 to gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

# Grafana
grafana:
  enabled: true
  adminPassword: "changeme123!"
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  persistence:
    enabled: true
    storageClassName: gp2  # Already correct
    size: 5Gi
  sidecar:
    dashboards:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 128Mi
    datasources:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 128Mi
  grafana.ini:
    server:
      domain: localhost
      root_url: "%(protocol)s://%(domain)s/grafana"
      serve_from_sub_path: true

# AlertManager - with fixed external URL
alertmanager:
  enabled: true
  alertmanagerSpec:
    replicas: 1
    # FIXED: Added http scheme
    externalUrl: http://localhost/alertmanager
    routePrefix: /alertmanager
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

# Node Exporter
nodeExporter:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

# Kube State Metrics
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Disable non-essential components
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubelet:
  enabled: false
coreDns:
  enabled: false

# Minimal rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    general: true
    k8s: true
    kubernetesApps: true
    kubernetesResources: true
    prometheus: true
    prometheusOperator: true
    etcd: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    network: false
    node: false