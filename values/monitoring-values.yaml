# monitoring-values-minimal.yaml
# Minimal resource configuration to fit within quota

# Global settings
global:
  evaluation_interval: 30s
  scrape_interval: 30s

# Prometheus Operator - minimal resources
prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: true        # Enable webhooks
    patch:
      enabled: true      # Enable patch job to create certificates
      image:
        repository: registry.k8s.io/ingress-nginx/kube-webhook-certgen
        tag: v20221220-controller-v1.5.1-58-g787ea74b6
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
        limits:
          cpu: 100m
          memory: 100Mi
  tls:
    enabled: true        # Enable TLS
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Prometheus - reduced resources
prometheus:
  enabled: true
  prometheusSpec:
    replicas: 1  # Single replica
    externalUrl: /prometheus
    routePrefix: /prometheus
    retention: 7d  # Reduced retention
    resources:
      requests:
        cpu: 500m       
        memory: 1Gi   
      limits:
        cpu: 1000m
        memory: 2Gi
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp3
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

# Grafana - minimal resources
grafana:
  enabled: true
  adminPassword: "changeme123!"
  replicas: 1  # Single replica only
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  persistence:
    enabled: true
    storageClassName: gp2
    size: 5Gi
  sidecar:
    dashboards:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 128Mi
    datasources:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 128Mi
  grafana.ini:
    server:
      domain: localhost
      root_url: "%(protocol)s://%(domain)s/grafana"
      serve_from_sub_path: true

# AlertManager - minimal resources
alertmanager:
  enabled: true
  alertmanagerSpec:
    replicas: 1  # Single replica
    externalUrl: /alertmanager
    routePrefix: /alertmanager
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          resources:
            requests:
              storage: 5Gi

# Node Exporter - minimal
nodeExporter:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

# Kube State Metrics - minimal
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Disable non-essential components
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubelet:
  enabled: false
coreDns:
  enabled: false

# Minimal rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    general: true
    k8s: true
    kubernetesApps: true
    kubernetesResources: true
    prometheus: true
    prometheusOperator: true
    # Disable others to save resources
    etcd: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    network: false
    node: false