# PostgreSQL configuration for Data Platform

# PostgreSQL image
image:
  registry: docker.io
  repository: bitnami/postgresql
  tag: 16.4.0-debian-12-r19
  pullPolicy: IfNotPresent

# Authentication
auth:
  # IMPORTANT: Change these in production!
  postgresPassword: "postgres123"
  username: "admin"
  password: "admin123"
  database: "dataplatform"
  
  # Create additional databases
  # We'll create users via init scripts
  existingSecret: ""

# PostgreSQL configuration
primary:
  # Resources
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  # Persistence
  persistence:
    enabled: true
    size: 50Gi
    storageClass: gp2
  
  # Init scripts to create databases and users
  initdb:
    scripts:
      01-create-airflow-db.sql: |
        -- Create Airflow database and user
        CREATE USER airflow WITH PASSWORD 'airflow123';
        CREATE DATABASE airflow OWNER airflow;
        GRANT ALL PRIVILEGES ON DATABASE airflow TO airflow;
        
        -- Create Dremio database and user (if needed)
        CREATE USER dremio WITH PASSWORD 'dremio123';
        CREATE DATABASE dremio OWNER dremio;
        GRANT ALL PRIVILEGES ON DATABASE dremio TO dremio;
        
        -- Create Superset database and user (for future use)
        CREATE USER superset WITH PASSWORD 'superset123';
        CREATE DATABASE superset OWNER superset;
        GRANT ALL PRIVILEGES ON DATABASE superset TO superset;
        
        -- Create Spark metadata database (if needed)
        CREATE USER spark WITH PASSWORD 'spark123';
        CREATE DATABASE spark_metadata OWNER spark;
        GRANT ALL PRIVILEGES ON DATABASE spark_metadata TO spark;

  # PostgreSQL configuration
  configuration: |-
    # Connection settings
    listen_addresses = '*'
    max_connections = 200
    
    # Memory settings
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    work_mem = 4MB
    
    # WAL settings
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB
    
    # Query tuning
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Logging
    log_statement = 'all'
    log_duration = on
    log_line_prefix = '%t [%p-%l] %q%u@%d '
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    
    # Enable pg_stat_statements
    shared_preload_libraries = 'pg_stat_statements'

# Service configuration
service:
  type: ClusterIP
  ports:
    postgresql: 5432

# Metrics
metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgres-exporter
    tag: 0.15.0-debian-12-r45
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  serviceMonitor:
    enabled: true
    namespace: postgresql
    labels:
      prometheus: kube-prometheus
      release: prometheus-stack
    interval: 30s

# Volume permissions
volumePermissions:
  enabled: true
  
# PostgreSQL common configuration
shmVolume:
  enabled: true
  sizeLimit: 1Gi

# Backup configuration (if using)
backup:
  enabled: false
  
# Network policy
networkPolicy:
  enabled: true
  allowExternal: true
  
  # Allow specific namespaces
  ingressRules:
    primaryAccessOnlyFrom:
      enabled: true
      namespaceSelector: |
        matchExpressions:
          - key: name
            operator: In
            values: 
              - airflow
              - dremio
              - spark
              - superset
              - monitoring