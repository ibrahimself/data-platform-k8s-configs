# dremio/values.yaml
# Dremio Enterprise Edition configuration

dremio:
  # Your trial credentials from Quay.io
  trialImagePullCredentials: "ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJaSEpsYldsdkszUnlhV0ZzWDJGalkyVnpjMTh3TjE4eE4xOHlNREkxT2s4d1dFYzRUbGhaTkZjeFFsZE9RMEk1T1VGUk1FdGFPRFpCVTB3MFFWZFdSRUl3UVVKQlRVUklSRVJZVkZwUFFqSktOVkJHVUVoSVdVWkJXVUZYUmtVPSIsCiAgICAgICJlbWFpbCI6ICIiCiAgICB9CiAgfQp9"
  
  # Your license key (valid until 2025-06-18)
  license: "eyJraWQiOiI4MGZhMjgxYzZhZjczNDNkNTE1YTVhMzg1MDg1N2RhNmE2YmEzMTU3NWE5ZjVlZmVhMmQ4MTkyMGUyM2Q2OGY0IiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJEcmVtaW8iLCJzdWIiOiIwMDM1ZDAwMDA3TFRkT0VBQTEiLCJuYmYiOjE3NTI3ODA0NzYsImV4cCI6MTc1NTU0NTI3NiwiaWF0IjoxNzUyNzgwNDc2LCJqdGkiOiIxNzUyNzgwNDc2MDYyVzJjciJ9.u8bxfpQvyieeGn3H8RNIyKqbIgHR4pYO0mfBDBh23WJJw58t2WsDEhbOL6rUdfyGu4hItUtcohCoSEXMaAAolg"
  
  image:
    repository: quay.io/dremio/dremio-enterprise
    tag: "26.0.1" 
    pullPolicy: IfNotPresent

  # Performance and configuration optimizations
  dremioConfExtraOptions:
    # Performance settings
    "services.coordinator.web.port": "9047"
    "services.coordinator.web.ssl.enabled": "false"
    "services.fabric.memory.reservation": "4G"
    "services.coordinator.heap.memory.max": "8G"
    "services.executor.heap.memory.max": "8G"
    
    # Data lake integration
    "paths.dist": "s3a://data-platform-data-lake-s3d92803/dremio"
    "services.coordinator.enable-heap-monitoring": "true"

# Coordinator (Master) configuration
coordinator:
  count: 1
  
  # Web interface configuration
  web:
    auth:
      enabled: true
      type: "internal"
    port: 9047
    ssl:
      enabled: false

  # Resource allocation
  resources:
    requests:
      cpu: "4"
      memory: "8Gi"
    limits:
      cpu: "8"
      memory: "16Gi"

  # Service configuration for external access
  service:
    type: ClusterIP
    port: 9047
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

  # Persistent storage for coordinator metadata
  volumeClaimTemplate:
    storageClassName: "gp2"
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 100Gi

  # Node selection - use analytics nodes
  nodeSelector:
    node-group: analytics
  tolerations: []
  affinity: {}

# Executor configuration
executor:
  count: 3
  
  # Resource allocation for executors
  resources:
    requests:
      cpu: "4"
      memory: "12Gi"
    limits:
      cpu: "8"
      memory: "24Gi"

  # Executor storage for caching and spill
  volumeClaimTemplate:
    storageClassName: "gp2"
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 200Gi

  # Node selection for executors - use compute nodes
  nodeSelector:
    node-group: compute
  tolerations: []
  affinity:
    # Spread executors across nodes
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - dremio-executor
          topologyKey: kubernetes.io/hostname

# Distributed storage configuration (S3)
distStorage:
  type: "aws"
  aws:
    bucketName: "data-platform-data-lake-s3d92803"
    path: "/dremio"
    authentication: "metadata"  # Use IAM roles
    
    # S3 performance optimizations
    extraProperties: |
      <property>
        <name>fs.s3a.endpoint</name>
        <value>s3.eu-west-3.amazonaws.com</value>
      </property>
      <property>
        <name>fs.s3a.path.style.access</name>
        <value>false</value>
      </property>
      <property>
        <name>fs.s3a.block.size</name>
        <value>134217728</value>
      </property>
      <property>
        <name>fs.s3a.multipart.size</name>
        <value>67108864</value>
      </property>
      <property>
        <name>fs.s3a.multipart.threshold</name>
        <value>134217728</value>
      </property>
      <property>
        <name>fs.s3a.fast.upload</name>
        <value>true</value>
      </property>

# Service Account for AWS integration
serviceAccount:
  create: true
  name: dremio
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::399883341639:role/data-platform-dremio-s3-access"

# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      prometheus: kube-prometheus-stack
  metrics:
    enabled: true
    port: 9010

# Security configurations
securityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

# Additional pod configurations
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 999
  fsGroup: 999

# Image pull secrets (handled by trialImagePullCredentials above)
imagePullSecrets: []

# Additional environment variables
extraEnv:
  - name: AWS_REGION
    value: eu-west-3

# Additional volumes
extraVolumes: []
extraVolumeMounts: []