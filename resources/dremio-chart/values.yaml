# Ultra-Minimal Dremio Configuration
# Only essential components enabled

# License
dremio:
  license: "eyJraWQiOiI4MGZhMjgxYzZhZjczNDNkNTE1YTVhMzg1MDg1N2RhNmE2YmEzMTU3NWE5ZjVlZmVhMmQ4MTkyMGUyM2Q2OGY0IiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJEcmVtaW8iLCJzdWIiOiIwMDM1ZDAwMDA3TFRkT0VBQTEiLCJuYmYiOjE3NTI3ODA0NzYsImV4cCI6MTc1NTU0NTI3NiwiaWF0IjoxNzUyNzgwNDc2LCJqdGkiOiIxNzUyNzgwNDc2MDYyVzJjciJ9.u8bxfpQvyieeGn3H8RNIyKqbIgHR4pYO0mfBDBh23WJJw58t2WsDEhbOL6rUdfyGu4hItUtcohCoSEXMaAAolg"
  
  image:
    repository: quay.io/dremio/dremio-enterprise

# Image Pull Secret
imagePullSecrets:
  - i-bouabdallaoui-dataplatform-pull-secret

# Coordinator - Minimal
# In your dremio-values.yaml, add:
coordinator:
  initContainers:
  - name: cluster-id-setup
    image: quay.io/dremio/alpine/k8s:1.32.2
    command: ["sh", "-c"]
    args:
    - |
      set -e
      # Check if configmap exists and has cluster_id
      if kubectl get configmap dremio-cluster-id -o jsonpath='{.data.cluster_id}' 2>/dev/null | grep -q .; then
        echo "Cluster ID already exists"
      else
        cluster_id=$(curl -k --retry-connrefused --retry 90 --retry-delay 10 --retry-max-time 900 \
          http://dremio-client:9047/api/v3/cluster/id | jq -r .id)
        echo "cluster_id=${cluster_id}"
        kubectl create configmap dremio-cluster-id --from-literal=cluster_id="${cluster_id}" \
          --dry-run=client -o yaml | kubectl apply -f -
      fi
  resources:
    requests:
      cpu: "500m"
      memory: "4Gi"
    limits:
      cpu: "500m"
      memory: "4Gi"
  volumeSize: "10Gi"
  count: 0
  
  web:
    auth:
      enabled: true
      type: "internal"
    tls:
      enabled: false

# Service
service:
  type: ClusterIP
  sessionAffinity: "ClientIP"

# Zookeeper - Minimal
zookeeper:
  enabled: true
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "250m"
      memory: "512Mi"
  volumeSize: "5Gi"
  count: 1

# MinIO Storage
distStorage:
  type: "aws"
  aws:
    bucketName: "dremio-dist-storage"
    path: "/"
    authentication: "accessKeySecret"
    credentials:
      accessKey: "minioadmin"
      secret: "minioadmin123"
    extraProperties: |
      <property>
        <n>fs.s3a.endpoint</n>
        <value>http://minio.minio.svc.cluster.local:9000</value>
      </property>
      <property>
        <n>fs.s3a.path.style.access</n>
        <value>true</value>
      </property>

# Disable ALL optional components
mongodb:
  enabled: false

nats:
  enabled: false

catalog:
  enabled: false
  externalAccess:
    enabled: false

catalogExternalAccessServer:
  enabled: false

catalogServiceServer:
  enabled: false

engineOperator:
  enabled: false

executor:
  enabled: false

opensearch:
  enabled: false

telemetry:
  enabled: false

ingress:
  enabled: false

# Essential labels
commonLabels:
  app: dremio
  app.kubernetes.io/name: dremio
  app.kubernetes.io/instance: dremio