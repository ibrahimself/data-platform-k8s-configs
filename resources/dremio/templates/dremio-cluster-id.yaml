#
# Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: dremio-cluster-id
# data is intentionally omitted
# The cluster_id is populated after the coordinator starts by the Job below
# Upgrades won't wipe out the contents
# The resource will be deleted on uninstall
{{- if not ((lookup "v1" "ConfigMap" .Release.Namespace "dremio-cluster-id").data).cluster_id }}
# These resources add the cluster_id to the ConfigMap above
# They will only be created on install
# They will be removed on subsequent upgrades
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dremio-cluster-id
{{- include "dremio.imagePullSecrets" $ }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dremio-cluster-id
rules:
  - apiGroups: [""]
    resources: [configmaps]
    verbs: [get,patch]
    # Including the specific resource keeps the permissions very narrow
    # This wouldn't work with 'create' so we have to pre-create an empty
    # ConfigMap and then patch it.
    resourceNames: [dremio-cluster-id]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dremio-cluster-id
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dremio-cluster-id
subjects:
  - kind: ServiceAccount
    name: dremio-cluster-id
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dremio-cluster-id
spec:
  ttlSecondsAfterFinished: 900
  template:
    metadata:
      name: dremio-cluster-id
    spec:
      serviceAccountName: dremio-cluster-id
      restartPolicy: Never
      containers:
        - name: dremio-cluster-id
          image: {{ .Values.k8s.image.repository }}:{{ .Values.k8s.image.tag }}
          imagePullPolicy: {{ .Values.k8s.image.pullPolicy }}
          command: [ "sh", "-c" ]
          args:
            - |
              {{- $url := printf "%s://dremio-client:%d/api/v3/cluster/id"
                (.Values.coordinator.web.tls.enabled | ternary "https" "http")
                (int .Values.coordinator.web.port) }}
              set -e
              cluster_id=$(time curl -k \
                --retry-connrefused --retry 90 --retry-delay 10 --retry-max-time 900 \
                {{ $url }} | jq -r .id)
              echo "cluster_id=${cluster_id}"
              kubectl patch configmap dremio-cluster-id \
                --patch "{\"data\":{\"cluster_id\":\"${cluster_id}\"}}"
{{- end }}
