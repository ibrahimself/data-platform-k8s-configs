apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dremio
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    # Using GitHub repository instead of OCI registry to avoid auth issues
    repoURL: https://github.com/dremio/dremio-cloud-tools.git
    path: charts/dremio_v2
    targetRevision: master
    helm:
      values: |
        # Dremio Enterprise Edition configuration
        
        # Image configuration - Enterprise Edition from quay.io
        image: quay.io/dremio/dremio-ee
        imageTag: "26.0.1"
        
        # Image pull secret for Docker images
        imagePullSecrets:
          - i-bouabdallaoui-dataplatform-pull-secret
        
        # Service configuration
        service:
          type: LoadBalancer
        
        # Coordinator configuration (for r5.xlarge: 4 vCPU, 32GB RAM)
        coordinator:
          cpu: 3
          memory: 24576  # 24Gi in MB
          count: 1
          volumeSize: 50Gi
          
          web:
            port: 9047
            auth:
              type: "internal"
          
          client:
            port: 31010
          
          flight:
            port: 32010
        
        # Executor configuration (for m5.2xlarge: 8 vCPU, 32GB RAM)
        executor:
          cpu: 6
          memory: 24576  # 24Gi in MB
          count: 3
          volumeSize: 50Gi
          
          cloudCache:
            enabled: true
            quota:
              fs_pct: 100
              db_pct: 100
              cache_pct: 100
        
        # Zookeeper configuration
        zookeeper:
          cpu: 0.5
          memory: 1024  # 1Gi in MB
          count: 3
          volumeSize: 10Gi
        
        # Distributed Storage - MinIO
        distStorage:
          type: "aws"
          aws:
            bucketName: "dremio"
            path: "/"
            authentication: "accessKeySecret"
            credentials:
              accessKey: "minioadmin"
              secret: "minioadmin"
            extraProperties: |
              <property>
                <n>fs.s3a.endpoint</n>
                <value>minio.minio.svc.cluster.local:9000</value>
              </property>
              <property>
                <n>fs.s3a.path.style.access</n>
                <value>true</value>
              </property>
              <property>
                <n>fs.s3a.connection.ssl.enabled</n>
                <value>false</value>
              </property>
        
        # Extra startup parameters for monitoring
        extraStartParams: >-
          -Dservices.web-admin.enabled=true
          -Dservices.web-admin.host=0.0.0.0
          -Dservices.web-admin.port=9090
          -Djava.jmx.enabled=true
          -Djava.jmx.port=9099
        
        # Pod annotations for Prometheus
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9090"
          prometheus.io/path: "/metrics"
        
        # Extra environment variables for license
        extraEnvVars:
          - name: DREMIO_ENTERPRISE_LICENSE
            value: "eyJraWQiOiI4MGZhMjgxYzZhZjczNDNkNTE1YTVhMzg1MDg1N2RhNmE2YmEzMTU3NWE5ZjVlZmVhMmQ4MTkyMGUyM2Q2OGY0IiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJEcmVtaW8iLCJzdWIiOiIwMDM1ZDAwMDA3TFRkT0VBQTEiLCJuYmYiOjE3NTI3ODA0NzYsImV4cCI6MTc1NTU0NTI3NiwiaWF0IjoxNzUyNzgwNDc2LCJqdGkiOiIxNzUyNzgwNDc2MDYyVzJjciJ9.u8bxfpQvyieeGn3H8RNIyKqbIgHR4pYO0mfBDBh23WJJw58t2WsDEhbOL6rUdfyGu4hItUtcohCoSEXMaAAolg"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: dremio
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  revisionHistoryLimit: 10