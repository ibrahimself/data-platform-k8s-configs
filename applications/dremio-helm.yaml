apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dremio
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    repoURL: https://github.com/dremio/dremio-cloud-tools.git
    path: charts/dremio_v2
    targetRevision: master
    helm:
      values: |
        # Dremio Enterprise Configuration
        dremio:
          # Your trial image pull credentials
          trialImagePullCredentials: "ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJaSEpsYldsdkszUnlhV0ZzWDJGalkyVnpjMTh3TjE4eE4xOHlNREkxT2s4d1dFYzRUbGhaTkZjeFFsZE9RMEk1T1VGUk1FdGFPRFpCVTB3MFFWZFdSRUl3UVVKQlRVUklSRVJZVkZwUFFqSktOVkJHVUVoSVdVWkJXVUZYUmtVPSIsCiAgICAgICJlbWFpbCI6ICIiCiAgICB9CiAgfQp9"
          
          # Your Dremio Enterprise License
          license: "eyJraWQiOiI4MGZhMjgxYzZhZjczNDNkNTE1YTVhMzg1MDg1N2RhNmE2YmEzMTU3NWE5ZjVlZmVhMmQ4MTkyMGUyM2Q2OGY0IiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJEcmVtaW8iLCJzdWIiOiIwMDM1ZDAwMDA3TFRkT0VBQTEiLCJuYmYiOjE3NTI3ODA0NzYsImV4cCI6MTc1NTU0NTI3NiwiaWF0IjoxNzUyNzgwNDc2LCJqdGkiOiIxNzUyNzgwNDc2MDYyVzJjciJ9.u8bxfpQvyieeGn3H8RNIyKqbIgHR4pYO0mfBDBh23WJJw58t2WsDEhbOL6rUdfyGu4hItUtcohCoSEXMaAAolg"
          
          # Dremio Enterprise image from quay.io
          image:
            repository: quay.io/dremio/dremio-enterprise
            tag: latest
          
          # Extra configuration for Prometheus monitoring
          dremioConfExtraOptions:
            # Enable Prometheus metrics
            "services.web-admin.enabled": true
            "services.web-admin.host": "0.0.0.0"
            "services.web-admin.port": 9090
            # Enable JMX
            "java.jmx.enabled": true
            "java.jmx.port": 9099
            # Query settings
            "query.planning.max-millis": 30000
            "query.metadata.max-millis": 60000
            # Debug settings
            "debug.enabled": true
            "debug.memory.heap-monitoring.enabled": true
        
        # Image pull secret reference
        imagePullSecrets:
          - i-bouabdallaoui-dataplatform-pull-secret
        
        # Service configuration
        service:
          type: LoadBalancer
          # Uncomment below for internal load balancer
          # annotations:
          #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        
        # Coordinator configuration (matching your values-override.yaml)
        coordinator:
          count: 1
          resources:
            requests:
              cpu: "32"
              memory: "64Gi"
            limits:
              memory: "64Gi"
          web:
            auth:
              enabled: true
              type: "internal"
            port: 9047
          client:
            port: 31010
          flight:
            port: 32010
          volumeSize: 100Gi
        
        # Executor configuration
        executor:
          count: 3
          resources:
            requests:
              cpu: "16"
              memory: "32Gi"
            limits:
              memory: "32Gi"
          volumeSize: 100Gi
          cloudCache:
            enabled: true
            quota:
              fs_pct: 100
              db_pct: 100
              cache_pct: 100
        
        # Zookeeper configuration
        zookeeper:
          memory: 1024
          cpu: 0.5
          count: 3
          volumeSize: 10Gi
        
        # Distributed Storage - CHOOSE ONE OPTION BELOW
        
        # Option 1: MinIO (S3-compatible) - DEFAULT FOR TESTING
        distStorage:
          type: "aws"
          aws:
            bucketName: "dremio"
            path: "/"
            authentication: "accessKeySecret"
            credentials:
              accessKey: "minioadmin"
              secret: "minioadmin"
            extraProperties: |
              <property>
                <n>fs.s3a.endpoint</n>
                <value>minio.minio.svc.cluster.local:9000</value>
              </property>
              <property>
                <n>fs.s3a.path.style.access</n>
                <value>true</value>
              </property>
              <property>
                <n>fs.s3a.connection.ssl.enabled</n>
                <value>false</value>
              </property>
        
        # Option 2: AWS S3 - UNCOMMENT AND UPDATE IF USING S3
        # distStorage:
        #   type: "aws"
        #   aws:
        #     bucketName: "your-s3-bucket-name"
        #     path: "/"
        #     authentication: "accessKeySecret"
        #     credentials:
        #       accessKey: "YOUR_AWS_ACCESS_KEY"
        #       secret: "YOUR_AWS_SECRET_KEY"
        
        # Option 3: Azure Storage - UNCOMMENT AND UPDATE IF USING AZURE
        # distStorage:
        #   type: "azureStorage"
        #   azureStorage:
        #     accountName: "yourstorageaccount"
        #     authentication: "accessKey"
        #     filesystem: "dremio-container"
        #     path: "/"
        #     credentials:
        #       accessKey: "YOUR_AZURE_ACCESS_KEY"
        
        # Pod annotations for Prometheus
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9090"
          prometheus.io/path: "/metrics"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: dremio
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  revisionHistoryLimit: 10